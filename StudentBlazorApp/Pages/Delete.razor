@page "/delete"
@page "/delete/{studentId}"
@using StudentBlazorApp.Models
@inject HttpClient httpClient
@inject NavigationManager NavManager

<div>
  <h1>Delete Student Confirmation Page</h1>
</div>
@if (student == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <NavLink class="btn btn-primary" href="/">Return</NavLink>
  <table class='table table-hover'>
  <thead>
    <tr>
      <th>ID</th>
      <th>First Name</th>
      <th>Last Name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>@student.StudentId</td>
      <td>@student.FirstName</td>
      <td>@student.LastName</td>
      <td><button class="btn btn-danger btn-sm" @onclick="@HandleDelete">del</button></td>
    </tr>
  </tbody>
</table>
}

@code {
  string baseUrl = "http://localhost:5000/";
  private Student student = new Student();
  [Parameter]
  public string StudentId { get; set; }

  protected override async Task OnInitializedAsync()
  {
    await ShowEdit(StudentId);
  }

  protected async Task ShowEdit(string id)
  {
    Student s = await httpClient.GetFromJsonAsync<Student>($"{baseUrl}api/students/{id}");
    student.StudentId = s.StudentId;
    student.FirstName = s.FirstName;
    student.LastName = s.LastName;
    student.Email = s.Email;
    student.MobileNumber = s.MobileNumber;
    student.Specialization = s.Specialization;
    student.City = s.City;
    student.Province = s.Province;
    student.Employer = s.Employer;
  }
  protected async void HandleDelete()
  {
    string endpoint = $"{baseUrl}api/students/{student.StudentId}";
    await httpClient.DeleteAsync(endpoint);
    StateHasChanged(); // causes the page to get automatically refreshed
    Redirect();
  }

  private void Redirect()
  {
    NavManager.NavigateTo("/");
  }
}